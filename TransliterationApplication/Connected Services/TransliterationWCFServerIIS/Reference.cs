//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Transliteration.TransliterationApplication.TransliterationWCFServerIIS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransliterationWCFServerIIS.ITransliterationService")]
    public interface ITransliterationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/GetAllUsers", ReplyAction="http://tempuri.org/ITransliterationService/GetAllUsersResponse")]
        Transliteration.DBModels.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/GetAllUsers", ReplyAction="http://tempuri.org/ITransliterationService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<Transliteration.DBModels.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/AddUser", ReplyAction="http://tempuri.org/ITransliterationService/AddUserResponse")]
        void AddUser(Transliteration.DBModels.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/AddUser", ReplyAction="http://tempuri.org/ITransliterationService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(Transliteration.DBModels.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/UserExists", ReplyAction="http://tempuri.org/ITransliterationService/UserExistsResponse")]
        bool UserExists(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/UserExists", ReplyAction="http://tempuri.org/ITransliterationService/UserExistsResponse")]
        System.Threading.Tasks.Task<bool> UserExistsAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/GetUser", ReplyAction="http://tempuri.org/ITransliterationService/GetUserResponse")]
        Transliteration.DBModels.User GetUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/GetUser", ReplyAction="http://tempuri.org/ITransliterationService/GetUserResponse")]
        System.Threading.Tasks.Task<Transliteration.DBModels.User> GetUserAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/AddTransliteration", ReplyAction="http://tempuri.org/ITransliterationService/AddTransliterationResponse")]
        void AddTransliteration(Transliteration.DBModels.Transliteration transliteration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransliterationService/AddTransliteration", ReplyAction="http://tempuri.org/ITransliterationService/AddTransliterationResponse")]
        System.Threading.Tasks.Task AddTransliterationAsync(Transliteration.DBModels.Transliteration transliteration);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransliterationServiceChannel : Transliteration.TransliterationApplication.TransliterationWCFServerIIS.ITransliterationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransliterationServiceClient : System.ServiceModel.ClientBase<Transliteration.TransliterationApplication.TransliterationWCFServerIIS.ITransliterationService>, Transliteration.TransliterationApplication.TransliterationWCFServerIIS.ITransliterationService {
        
        public TransliterationServiceClient() {
        }
        
        public TransliterationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransliterationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransliterationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransliterationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Transliteration.DBModels.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<Transliteration.DBModels.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public void AddUser(Transliteration.DBModels.User user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(Transliteration.DBModels.User user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public bool UserExists(string login) {
            return base.Channel.UserExists(login);
        }
        
        public System.Threading.Tasks.Task<bool> UserExistsAsync(string login) {
            return base.Channel.UserExistsAsync(login);
        }
        
        public Transliteration.DBModels.User GetUser(string login) {
            return base.Channel.GetUser(login);
        }
        
        public System.Threading.Tasks.Task<Transliteration.DBModels.User> GetUserAsync(string login) {
            return base.Channel.GetUserAsync(login);
        }
        
        public void AddTransliteration(Transliteration.DBModels.Transliteration transliteration) {
            base.Channel.AddTransliteration(transliteration);
        }
        
        public System.Threading.Tasks.Task AddTransliterationAsync(Transliteration.DBModels.Transliteration transliteration) {
            return base.Channel.AddTransliterationAsync(transliteration);
        }
    }
}
